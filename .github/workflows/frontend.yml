# .github/workflows/frontend.yml
name: Frontend CI/CD

on:
  push:
    branches: [ "develop", "main" ]
  pull_request:
    branches: [ "develop", "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1) ソースコードチェックアウト
      - name: Check out repository
        uses: actions/checkout@v3

      # 2) Node のセットアップ
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # 3) 依存パッケージのインストール
      - name: Install dependencies
        run: npm ci

      # 4) 必要なら .env.dev / .env.prod を生成する（例として GitHub Secrets を使う場合）
      #
      #   - (A) GitHub SecretsでVITE_API_STAGE, VITE_COGNITO_USER_POOL_ID, ...などを管理
      #   - (B) ここでechoして.envファイルを作るか、あるいは--mode引数のみで済むなら不要
      # 例:
      # - name: Create .env file from secrets
      #   run: |
      #     echo "VITE_API_STAGE=${{ secrets.VITE_API_STAGE }}" >> .env
      #     echo "VITE_COGNITO_REGION=${{ secrets.VITE_COGNITO_REGION }}" >> .env
      #     # ...etc

      # 5) テスト
      - name: Run tests
        run: npm run test

      # 6) ビルド
      #    - developブランチ → 開発用ビルド
      #    - mainブランチ → 本番ビルド
      - name: Build
        run: |
          if [ "${{ github.ref_name }}" = "main" ]; then
            echo "Building for production"
            npm run build:dev
          else
            echo "Building for develop"
            npm run build:prod
          fi

      # 7) AWS Credential を設定（Secretsから取得）
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 8) デプロイ（push の場合のみ。pull_requestイベントの場合はデプロイしない）
      - name: Deploy to S3
        if: github.event_name == 'push'
        run: |
          # develop または main どちらのブランチか判定
          if [ "${{ github.ref_name }}" = "develop" ]; then
            echo "Deploying to STAGING bucket: markdown-portal-dev"
            aws s3 sync dist/ s3://markdown-portal-dev/ --delete
          elif [ "${{ github.ref_name }}" = "main" ]; then
            echo "Deploying to PRODUCTION bucket: markdown-portal-prod"
            aws s3 sync dist/ s3://markdown-portal-prod/ --delete
          else
            echo "Not a target branch - skipping deploy."
