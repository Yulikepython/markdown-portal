name: Frontend CI/CD

on:
  # -------------------------------------
  # 1) pull_request → テスト
  #    (PR 作成/更新/再オープン など)
  # -------------------------------------
  pull_request:
    branches:
      - "develop"
      - "main"
    types: [opened, synchronize, reopened]

  # -------------------------------------
  # 2) develop / main への push → デプロイ
  # -------------------------------------
  push:
    branches:
      - "develop"
      - "main"

jobs:
  # ============================
  # (A) PR 時のテスト
  # ============================
  testOnPR:
    name: Test on Pull Request
    runs-on: ubuntu-latest

    # pull_request イベント時のみ実行
    if: github.event_name == 'pull_request'

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci
        working-directory: ./frontend

      - name: Run tests
        run: npm run test
        working-directory: ./frontend


  # ============================
  # (B) developブランチ → Stagingデプロイ
  # ============================
  build-and-deploy-develop:
    name: Build & Deploy (develop -> staging)
    runs-on: ubuntu-latest

    # pushイベント かつ developブランチ の場合のみ実行
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci
        working-directory: ./frontend

      - name: Build (staging)
        run: npm run build:dev
        working-directory: ./frontend
        env:
          VITE_API_STAGE: "dev"
          REACT_APP_USE_MOCK_AUTH: "false"
          VITE_COGNITO_DOMAIN: ${{ secrets.DEV_COGNITO_DOMAIN }}
          VITE_COGNITO_CLIENT_ID: ${{ secrets.DEV_COGNITO_CLIENT_ID }}
          VITE_COGNITO_USER_POOL_ID: ${{ secrets.DEV_COGNITO_USER_POOL_ID }}
          VITE_COGNITO_REGION: ${{ secrets.DEV_COGNITO_REGION }}
          VITE_SIGNIN_URL: ${{ secrets.DEV_SIGNIN_URL }}
          VITE_SIGNOUT_URL: ${{ secrets.DEV_SIGNOUT_URL }}
          VITE_API_BASE_URL: ${{ secrets.DEV_API_BASE_URL }}

      - name: Deploy to S3 (staging)
        run: aws s3 sync dist s3://${{ secrets.S3_STAGING_BUCKET }} --delete
        working-directory: ./frontend
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}


  # ============================
  # (C) mainブランチ → Productionデプロイ
  # ============================
  build-and-deploy-main:
    name: Build & Deploy (main -> production)
    runs-on: ubuntu-latest

    # pushイベント かつ mainブランチ の場合のみ実行
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci
        working-directory: ./frontend

      - name: Build (production)
        run: npm run build:prod
        working-directory: ./frontend
        env:
          VITE_API_STAGE: "prod"
          REACT_APP_USE_MOCK_AUTH: "false"
          VITE_COGNITO_DOMAIN: ${{ secrets.PROD_COGNITO_DOMAIN }}
          VITE_COGNITO_CLIENT_ID: ${{ secrets.PROD_COGNITO_CLIENT_ID }}
          VITE_COGNITO_USER_POOL_ID: ${{ secrets.PROD_COGNITO_USER_POOL_ID }}
          VITE_COGNITO_REGION: ${{ secrets.PROD_COGNITO_REGION }}
          VITE_SIGNIN_URL: ${{ secrets.PROD_SIGNIN_URL }}
          VITE_SIGNOUT_URL: ${{ secrets.PROD_SIGNOUT_URL }}
          VITE_API_BASE_URL: ${{ secrets.PROD_API_BASE_URL }}

      - name: Deploy to S3 (production)
        run: aws s3 sync dist s3://${{ secrets.S3_PROD_BUCKET }} --delete
        working-directory: ./frontend
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
