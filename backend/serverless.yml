service: markdown-portal-backend
org: itcmedia

provider:
  name: aws
  runtime: nodejs18.x
  region: ap-northeast-1

  # --stage オプションが指定されなければ "dev" にする
  stage: ${opt:stage, 'dev'}

  environment:
    # ブランチ(ステージ)ごとにテーブル名を変える
    DYNAMO_TABLE_NAME: "DocumentsTable-${self:provider.stage}"
    # ローカルで serverless offline を起動するときは、手動で IS_OFFLINE=true をセット
    IS_OFFLINE: ${env:IS_OFFLINE, 'false'}
    LOCAL_DYNAMO_ENDPOINT: "http://localhost:8888"

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:BatchGetItem"
        - "dynamodb:GetItem"
        - "dynamodb:Scan"
        - "dynamodb:Query"
        - "dynamodb:BatchWriteItem"
        - "dynamodb:PutItem"
        - "dynamodb:UpdateItem"
        - "dynamodb:DeleteItem"
      Resource:
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMO_TABLE_NAME}"
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMO_TABLE_NAME}/index/*"

functions:
  docsHandler:
    handler: dist/index.handler
    events:
      - http:
          path: api/docs
          method: get
      - http:
          path: api/docs/{slug}
          method: get
      - http:
          path: api/docs
          method: post
      - http:
          path: api/docs/{slug}
          method: put
      - http:
          path: api/docs/{slug}
          method: delete
      - http:
          path: api/documents/{slug}
          method: get

plugins:
  - serverless-offline

# CloudFormation リソースとして DynamoDB を作る場合
# "DocumentsTable" の宣言に「TableName」を上書きし、stage ごとに違うテーブルを用意
resources:
  Resources:
    DocumentsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        # dynamodb-table-definition.json の中身を展開する書き方
        # 下記のように YAML で「マージ」できれば理想ですが、単純参照の場合は
        # TableName を別途上書きする工夫が必要です
        #
        # 例: serverless ではこんな書き方も可
        #   Properties: ${file(dynamodb-table-definition.json)}
        #
        # もし上書きマージをしたい場合は、dynamodb-table-definition.json をやめ
        # 直接ここに BillingMode, AttributeDefinitions, KeySchema 等を書く方が楽です
        #
        # ここでは「名前だけ上書きする例」として記載します
        TableName: ${self:provider.environment.DYNAMO_TABLE_NAME}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: slug
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: slug
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: SlugIndex
            KeySchema:
              - AttributeName: slug
                KeyType: HASH
            Projection:
              ProjectionType: ALL
